# -*- coding: utf-8 -*-
"""Housing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FONXMlHKcskkcu72LHKFNiV4oArUvOAG
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import skew, kurtosis

df = pd.read_csv("/content/housing[1].csv")

def basic_house(df):
  HEAD = df.head(2)
  TAIL = df.tail(2)
  dis = df.describe()

  return HEAD,TAIL,dis

import numpy as np
import pandas as pd
from scipy.stats import skew, kurtosis

def analyze_data(df):
    """
    Analyzes the dataset by:
     Computing the correlation matrix. And displaying the four major statistical moments
       (Mean, Variance, Skewness, Kurtosis) for all numerical columns.

    Parameters:
        df (pd.DataFrame): The DataFrame containing numerical data.

    """

    # Select only numerical columns
    numerical_cols = df.select_dtypes(include=[np.number])

    # Compute Correlation Matrix
    correlation_matrix = numerical_cols.corr()

    # Compute Statistical Moments
    stats_moments = pd.DataFrame({
        "Mean": numerical_cols.mean(),
        "Variance": numerical_cols.var(),
        "Skewness": numerical_cols.apply(skew),
        "Kurtosis": numerical_cols.apply(kurtosis)
    })

    # Display results
    print("\nCORRELATION MATRIX \n")
    print(correlation_matrix)

    print("\n STATISTICAL MOMENTS\n")
    print(stats_moments)

# Call the function to analyze statistical moments & correlation matrix
#analyze_data(df)

def plot_co2_vs_cylinders_grouped():
    """
    Creates a scatter plot showing the relationship between the number of cylinders and CO₂ emissions,
    with points grouped (colored) by vehicle class.
    """

    # Set figure size
    plt.figure(figsize=(8,6))

    # Create scatter plot with vehicle class as hue
    sns.scatterplot(x="median_house_value", y="total_rooms", hue="ocean_proximity", data=df, palette="viridis", s=100, edgecolor="black")

    # Add labels and title
    plt.xlabel("Median House value")
    plt.ylabel("Total Rooms")
    plt.title("Housing Rates Vs Total Rooms")

    # Move legend outside for better visibility
    plt.legend(title="Location", bbox_to_anchor=(1,1), loc="upper left")

    # Display the plot
    plt.show()

def plot_fuel_consumption_by_vehicle_class():
    """
    Creates a bar chart showing the average fuel consumption for different vehicle classes.
    """
    # Group by Vehicle Class and calculate the mean fuel consumption
    # Changed "" to "ocean_proximity" as the grouping column
    df_grouped = df.groupby("ocean_proximity", as_index=False)["population"].mean()

    # Set figure size
    plt.figure(figsize=(8,6))

    # Create bar chart
    # Changed x and hue arguments to "ocean_proximity"
    ax = sns.barplot(x="ocean_proximity", y="population", hue="ocean_proximity", data=df_grouped, palette="magma", legend=False)

    # Add data labels on top of bars
    for p in ax.patches:
        ax.annotate(f'{p.get_height():.1f}',
                    (p.get_x() + p.get_width() / 2., p.get_height()),
                    ha='center', va='bottom', fontsize=12, fontweight='bold', color='black')

    # Add labels and title
    plt.xlabel("ocean_proximity")
    plt.ylabel("Average Fuel Consumption (L/100 km)")
    plt.title("Fuel Consumption vs. Vehicle Class")

    # Rotate x-axis labels for better readability
    plt.xticks(rotation=90)

    # Display the plot
    plt.show()

def plot_correlation_heatmap():
    """
    Creats a heatmap for all the numerical features.
    """
    # Filter only numeric columns
    df_numeric = df.select_dtypes(include=['float64', 'int64'])

    # Calculate correlation matrix
    correlation_matrix = df_numeric.corr()

    # Set the figure size
    plt.figure(figsize=(10,6))

    # Create heatmap
    sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)

    # Add title
    plt.title("Correlation Heatmap of Vehicle Features")

    # Display the plot
    plt.show()

import numpy as np
import pandas as pd
from scipy.stats import skew, kurtosis

def analyze_data(df):
    """
    Analyzes the dataset by:
     Computing the correlation matrix. And displaying the four major statistical moments
       (Mean, Variance, Skewness, Kurtosis) for all numerical columns.

    Parameters:
        df (pd.DataFrame): The DataFrame containing numerical data.

    """

    # Select only numerical columns
    numerical_cols = df.select_dtypes(include=[np.number])

    # Compute Correlation Matrix
    correlation_matrix = numerical_cols.corr()

    # Compute Statistical Moments
    stats_moments = pd.DataFrame({
        "Mean": numerical_cols.mean(),
        "Variance": numerical_cols.var(),
        "Skewness": numerical_cols.apply(skew),
        "Kurtosis": numerical_cols.apply(kurtosis)
    })

    # Display results
    print("\nCORRELATION MATRIX \n")
    print(correlation_matrix)

    print("\n STATISTICAL MOMENTS\n")
    print(stats_moments)



def main():
  print(basic_house(df))

  analyze_data(df)
  # Call the function.
  plot_co2_vs_cylinders_grouped()
  # Call the function
  plot_correlation_heatmap()
  analyze_data(df)

  plot_fuel_consumption_by_vehicle_class()


if __name__ == "__main__":
  main ()











import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt



#

# Call the function
plot_correlation_heatmap()

# Call the function to analyze statistical moments & correlation matrix

"""# Results

Fuel consumption (mpg) has a significant negative relationship with CO₂ emissions (-0.90), but engine size, cylinder, and fuel consumption have a positive relatonship (above 0.75), according to the correlation matrix.  According to the statistical moments, the distribution is right-skewed (0.81) and the mean engine size is 3.16L.  High spread is indicated by the fuel consumption variance (12.25 city, 4.94 highway), but a normal distribution is suggested by kurtosis values close to zero.  The majority of values cluster close to the center, with a moderate skewness (0.52) and a high mean (250.58 g/km) for CO₂ emissions.  In general, greater cylinders and larger engines use more fuel and emit more CO2.
"""